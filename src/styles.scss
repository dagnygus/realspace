// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use './constants.scss' as constants;
@use './colors.scss' as colors;
// Plus imports for other components in your app.


@tailwind base;
@tailwind components;
@tailwind utilities;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$RealSpace-primary: mat.define-palette(mat.$purple-palette, A400);
$RealSpace-accent: mat.define-palette(mat.$teal-palette, 500, 400, 600);

// The warn palette is optional (defaults to red).
$RealSpace-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$RealSpace-theme: mat.define-dark-theme((
  color: (
    primary: $RealSpace-primary,
    accent: $RealSpace-accent,
    warn: $RealSpace-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($RealSpace-theme);

/* You can add global styles to this file, and also import other style files */

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0px 0px 8px 0px rgba(black, $alpha: 0.64)
}

::-webkit-scrollbar-thumb {
  background-color: darkgray;
  border: 1px solid black;
  box-shadow: inset 0px 0px 3px 0px rgba(black, $alpha: 0.64);
  border-radius: 4px;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

* {
  box-sizing: border-box;
}

router-outlet {
  display: none;
}

header {
  height: constants.$header-height;
}

.global-header {
  display: none;

  @media (min-width: 1024px) {
    display: block;
  }
}

.local-header {
  display: block;

  @media (min-width: 1024px) {
    display: none;
  }
}

mat-sidenav-container {
  height: 100vh;
  // height: calc(100vh - constants.$header-height);
  @media (min-width: 1024px) {
    height: calc(100vh - constants.$header-height)
  }
}

.placeholder {
  position: relative;
  overflow: hidden;
}

.placeholder::after {
  content: '';
  top: 0;
	transform: translateX(100%);
	width: 100%;
	height: 100%;
	position: absolute;
	z-index:1;
	animation: slide 1s infinite;

  background: linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%);

}

.movie-card {
  background-color: black;
  border-radius: 4px;
  overflow: hidden;
  border: 2px solid black;
  cursor: pointer;
}

.movie-card-image-container {
  width: 100%;
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-bottom: calc((3 / 2) * 100%);
  }
}

.movie-card-image {
  top: 0;
  left: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.movie-card-title-container {
  padding: 0 4px;
  margin: 4px 0;
}

.movie-card-title {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: colors.$color-teal-400;
  text-shadow: 1px 2px 2px rgba(colors.$color-teal-400, 0.62);
}

.movie-card-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 12px;
  padding: 0 8px;
  margin: 8px 0;
}

.movie-card-star-icon {
  font-size: 18px;
  color: gold;
  transform: translateY(2px);
}

.movie-card-vote-avarage {
  transform: translateX(-4px);
}

.movie-card-placeholder {
  background-color: rgba(black, .32);
  border-radius: 4px;
}

.movie-card-placeholder::before {
  content: '';
  display: block;
  padding-bottom: calc((3 / 2) * 100% + 64px);
}

@keyframes slide {
  0% {transform:translateX(-100%);}
  100% {transform:translateX(100%);}
}
